{"ast":null,"code":"var _jsxFileName = \"/Users/pablo/Desktop/TFG Definitivo/front/src/components/MySessions.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MySessions = _ref => {\n  _s();\n\n  let {\n    API_URL\n  } = _ref;\n  const [upcoming, setUpcoming] = useState([]);\n  const [undated, setUndated] = useState([]);\n  const [previous, setPrevious] = useState([]);\n  const actualDate = new Date();\n\n  const getSessions = async () => {\n    await fetch(`${API_URL}/sessions`).then(res => res.json()).then(data => {\n      data.forEach(se => {\n        if (se.date == '') {\n          let updated = [...undated, se];\n          setUndated(updated);\n        } else if (se.date < actualDate) {\n          let updated = [...previous, se];\n          setPrevious(updated);\n        } else {\n          let updated = [...upcoming, se];\n          setUpcoming(updated);\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"MySessions\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MySessions, \"aT3fzcsxteNp2J1+sB9lEJios7U=\");\n\n_c = MySessions;\nexport default MySessions;\n\nvar _c;\n\n$RefreshReg$(_c, \"MySessions\");","map":{"version":3,"names":["React","useState","MySessions","API_URL","upcoming","setUpcoming","undated","setUndated","previous","setPrevious","actualDate","Date","getSessions","fetch","then","res","json","data","forEach","se","date","updated"],"sources":["/Users/pablo/Desktop/TFG Definitivo/front/src/components/MySessions.jsx"],"sourcesContent":["import React, { useState } from 'react'\n\nconst MySessions = ({API_URL}) => {\n  const [upcoming, setUpcoming] = useState([])\n  const [undated, setUndated] = useState([])\n  const [previous, setPrevious] = useState([])\n  const actualDate = new Date()\n\n  const getSessions = async () => {\n    await fetch(`${API_URL}/sessions`)\n          .then(res => res.json())\n          .then(data => {\n            data.forEach(se => {\n              if(se.date == '') {\n                let updated = [...undated, se]\n                setUndated(updated)\n              } else if(se.date < actualDate) {\n                let updated = [...previous, se]\n                setPrevious(updated)\n              } else {\n                let updated = [...upcoming, se]\n                setUpcoming(updated)\n              }\n            })\n          })\n  }\n\n  return (\n    <div>MySessions</div>\n  )\n}\n\nexport default MySessions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,UAAU,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAChC,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAMS,UAAU,GAAG,IAAIC,IAAJ,EAAnB;;EAEA,MAAMC,WAAW,GAAG,YAAY;IAC9B,MAAMC,KAAK,CAAE,GAAEV,OAAQ,WAAZ,CAAL,CACCW,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAI;MACZA,IAAI,CAACC,OAAL,CAAaC,EAAE,IAAI;QACjB,IAAGA,EAAE,CAACC,IAAH,IAAW,EAAd,EAAkB;UAChB,IAAIC,OAAO,GAAG,CAAC,GAAGf,OAAJ,EAAaa,EAAb,CAAd;UACAZ,UAAU,CAACc,OAAD,CAAV;QACD,CAHD,MAGO,IAAGF,EAAE,CAACC,IAAH,GAAUV,UAAb,EAAyB;UAC9B,IAAIW,OAAO,GAAG,CAAC,GAAGb,QAAJ,EAAcW,EAAd,CAAd;UACAV,WAAW,CAACY,OAAD,CAAX;QACD,CAHM,MAGA;UACL,IAAIA,OAAO,GAAG,CAAC,GAAGjB,QAAJ,EAAce,EAAd,CAAd;UACAd,WAAW,CAACgB,OAAD,CAAX;QACD;MACF,CAXD;IAYD,CAfD,CAAN;EAgBD,CAjBD;;EAmBA,oBACE;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAGD,CA5BD;;GAAMnB,U;;KAAAA,U;AA8BN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}